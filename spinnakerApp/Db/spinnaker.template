## spinnaker.template
## Template database file to control the features of a Point Grey camera using Spinnaker SDK.
##
## Note: this file contains only the records that are not handled by the GenICam autogenerated database

include "ADBase.template"

## These are the records from ADBase.template that we modify

# The Point Grey cameras use both GC_AcquisitionFrameRate and AcquirePeriod.
# Make AcquirePeriod update if FrameRate is changed.
record(ao, "$(P)$(R)AcquirePeriod")
{
   info(asyn:READBACK, "1")
}

record(bo, "$(P)$(R)TimeStampMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT) 0)SP_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
}

record(bi, "$(P)$(R)TimeStampMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
   field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)UniqueIdMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT) 0)SP_UNIQUE_ID_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "Driver")
}

record(bi, "$(P)$(R)UniqueIdMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_UNIQUE_ID_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "Driver")
   field(SCAN, "I/O Intr")
}

## Convert pixel format
record(mbbo, "$(P)$(R)ConvertPixelFormat") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "None")
  field(ONVL, "1")
  field(ONST, "Mono8")
  field(TWVL, "2")
  field(TWST, "Mono16")
  field(THVL, "3")
  field(THST, "Raw16")
  field(FRVL, "4")
  field(FRST, "RGB8")
  field(FVVL, "5")
  field(FVST, "RGB16")
  field(OUT,  "@asyn($(PORT) 0)SP_CONVERT_PIXEL_FORMAT")
}

record(mbbi, "$(P)$(R)ConvertPixelFormat_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "None")
  field(ONVL, "1")
  field(ONST, "Mono8")
  field(TWVL, "2")
  field(TWST, "Mono16")
  field(THVL, "3")
  field(THST, "Raw16")
  field(FRVL, "4")
  field(FRST, "RGB8")
  field(FVVL, "5")
  field(FVST, "RGB16")
  field(INP,  "@asyn($(PORT) 0)SP_CONVERT_PIXEL_FORMAT")
}

record(longin, "$(P)$(R)FailedPacketCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_FAILED_PACKET_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)FailedBufferCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_FAILED_BUFFER_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)BufferUnderrunCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_BUFFER_UNDERRUN_COUNT")
   field(SCAN, "I/O Intr")
}
