## spinnaker.template
## Template database file to control the features of a Point Grey camera using Spinnaker SDK.
##
## Note: this file contains only the records that are not handled by the GenICam autogenerated database

include "ADGenICam.template"

## These are the records from ADBase.template that we modify

record(bo, "$(P)$(R)TimeStampMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT) 0)SP_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
}

record(bi, "$(P)$(R)TimeStampMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_TIME_STAMP_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "EPICS")
   field(SCAN, "I/O Intr")
}

record(bo, "$(P)$(R)UniqueIdMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT) 0)SP_UNIQUE_ID_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "Driver")
}

record(bi, "$(P)$(R)UniqueIdMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_UNIQUE_ID_MODE")
   field(ZNAM, "Camera")
   field(ONAM, "Driver")
   field(SCAN, "I/O Intr")
}

## Convert pixel format
record(mbbo, "$(P)$(R)ConvertPixelFormat") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "None")
  field(ONVL, "1")
  field(ONST, "Mono8")
  field(TWVL, "2")
  field(TWST, "Mono16")
  field(THVL, "3")
  field(THST, "Raw16")
  field(FRVL, "4")
  field(FRST, "RGB8")
  field(FVVL, "5")
  field(FVST, "RGB16")
  field(OUT,  "@asyn($(PORT) 0)SP_CONVERT_PIXEL_FORMAT")
}

record(mbbi, "$(P)$(R)ConvertPixelFormat_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(ZRVL, "0")
  field(ZRST, "None")
  field(ONVL, "1")
  field(ONST, "Mono8")
  field(TWVL, "2")
  field(TWST, "Mono16")
  field(THVL, "3")
  field(THST, "Raw16")
  field(FRVL, "4")
  field(FRST, "RGB8")
  field(FVVL, "5")
  field(FVST, "RGB16")
  field(INP,  "@asyn($(PORT) 0)SP_CONVERT_PIXEL_FORMAT")
}

record(longin, "$(P)$(R)StartedFrameCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_STARTED_FRAME_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DeliveredFrameCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_DELIVERED_FRAME_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)ReceivedFrameCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_RECEIVED_FRAME_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)IncompleteFrameCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_INCOMPLETE_FRAME_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)LostFrameCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_LOST_FRAME_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)DroppedFrameCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_DROPPED_FRAME_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)InputBufferCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_INPUT_BUFFER_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)OutputBufferCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_OUTPUT_BUFFER_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)ReceivedPacketCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_RECEIVED_PACKET_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)MissedPacketCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_MISSED_PACKET_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)ResendRequestedPacketCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_RESEND_REQUESTED_PACKET_COUNT")
   field(SCAN, "I/O Intr")
}

record(longin, "$(P)$(R)ResendReceivedPacketCount")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT) 0)SP_RESEND_RECEIVED_PACKET_COUNT")
   field(SCAN, "I/O Intr")
}
